{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/api.propertyportfolio.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","apiPropertyPortfolioService","title","getAll","subscribe","data","owners","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","ApiPropertyPortfolioService","http","API","PROPERTY_PORTFOLIO_ENDPOINT","get","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\nimport Owner from './shared/owner';\nimport ApiPropertyPortfolioService from './shared/api.propertyportfolio.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Angular';\n\n  owners: Array<Owner>;\n\n  constructor(private apiPropertyPortfolioService: ApiPropertyPortfolioService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiPropertyPortfolioService.getAll().subscribe(data => {\r\n      this.owners = data;\r\n    });\r\n  }\n}\n","<div style=\"text-align:center\">\r\n  <h1>\r\n    Owners\r\n  </h1>\r\n\r\n  <span *ngFor=\"let owner of owners\">\r\n    {{owner.name}}\r\n    {{owner.gender}}\r\n    {{owner.age}}\r\n    <span *ngFor=\"let property of owner.properties\">\r\n      {{property.name}}\r\n      {{property.type}}\r\n    </span>\r\n    <br />\r\n  </span>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'; \n\nimport { AppComponent } from './app.component';\n\nimport ApiPropertyPortfolioService from './shared/api.propertyportfolio.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [ApiPropertyPortfolioService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport Owner from './owner';\r\n\r\n@Injectable()\r\nexport default class ApiPropertyPortfolioService {\r\n  public API = 'https://localhost:44334/api';\r\n  public PROPERTY_PORTFOLIO_ENDPOINT = `${this.API}/propertyportfolioapi`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<Array<Owner>> {\r\n    return this.http.get<Array<Owner>>(this.PROPERTY_PORTFOLIO_ENDPOINT);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}